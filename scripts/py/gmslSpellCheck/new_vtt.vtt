WEBVTT

8e65d397-7e86-4ce1-b7b8-de39150f1957-0
00:00:09.080 --> 00:00:12.939
Today we will discuss the
benefits and functionality of

8e65d397-7e86-4ce1-b7b8-de39150f1957-1
00:00:12.939 --> 00:00:14.800
GPIOs on our block diagram.

8d93c865-a00c-43b8-9d16-460430910d1f-0
00:00:15.000 --> 00:00:17.500
This will be on the
bidirectional communication

8d93c865-a00c-43b8-9d16-460430910d1f-1
00:00:17.500 --> 00:00:20.000
channel between the Serializer
and Deserializer.

6725546c-63e7-4452-b9ef-60516b43e3a3-0
00:00:21.040 --> 00:00:25.556
In this course we'll define what
the purpose of GPIOs is, define

6725546c-63e7-4452-b9ef-60516b43e3a3-1
00:00:25.556 --> 00:00:29.725
the system benefits of GPIOs,
explain the terminology of GPIO

6725546c-63e7-4452-b9ef-60516b43e3a3-2
00:00:29.725 --> 00:00:33.754
in the context of a GMSL link,
explain the methods of

6725546c-63e7-4452-b9ef-60516b43e3a3-3
00:00:33.754 --> 00:00:38.132
interfacing with the GPIOs, and
outline the options for GPIO

6725546c-63e7-4452-b9ef-60516b43e3a3-4
00:00:38.132 --> 00:00:42.231
configurations such as pull up
or pull downs, transmit and

6725546c-63e7-4452-b9ef-60516b43e3a3-5
00:00:42.231 --> 00:00:43.760
receive IDs, and more.

efdcd7b1-2f7e-4d73-9af1-3a6a5d9fca86-0
00:00:45.520 --> 00:00:49.001
At the core of even the most
complicated systems, a simple

efdcd7b1-2f7e-4d73-9af1-3a6a5d9fca86-1
00:00:49.001 --> 00:00:52.541
pulse like a reset signal,
control pulse or synchronization

efdcd7b1-2f7e-4d73-9af1-3a6a5d9fca86-2
00:00:52.541 --> 00:00:54.960
pulse are needed for low level
commands.

417c685b-3e58-436e-8146-4647129ac783-0
00:00:56.040 --> 00:00:59.292
That is where the humble GPIO
can be the companion to these

417c685b-3e58-436e-8146-4647129ac783-1
00:00:59.292 --> 00:01:00.160
complex systems.

63b2141f-1910-45f7-ba14-c5c68f9028a5-0
00:01:01.440 --> 00:01:04.755
In systems with GMSL, the SerDes
devices can transport this

63b2141f-1910-45f7-ba14-c5c68f9028a5-1
00:01:04.755 --> 00:01:08.237
signal over long distances to
help a remote sensor communicate

63b2141f-1910-45f7-ba14-c5c68f9028a5-2
00:01:08.237 --> 00:01:09.840
with a local microcontroller.

40175009-af2d-49c2-9edb-0dafa8ef40d6-0
00:01:10.560 --> 00:01:14.007
The SerDes devices convert this
discrete signal into a packet to

40175009-af2d-49c2-9edb-0dafa8ef40d6-1
00:01:14.007 --> 00:01:15.280
send over the GMSL link.

8f61a3d2-3a34-44a4-9ba8-1e84658ad13f-0
00:01:18.440 --> 00:01:21.400
GPIO stands for General Purpose
Input or Output.

f2a21b84-d01b-4299-a139-40c08504fe6e-0
00:01:24.000 --> 00:01:27.518
It's a simple feature that can
be utilized for purposes of

f2a21b84-d01b-4299-a139-40c08504fe6e-1
00:01:27.518 --> 00:01:31.215
outputting digital signals or
receiving digital signal inputs

f2a21b84-d01b-4299-a139-40c08504fe6e-2
00:01:31.215 --> 00:01:33.720
with a logic high or a logic low
voltage.

01904947-78e5-4293-a744-6ec4039ccca0-0
00:01:34.360 --> 00:01:38.047
GPIOs are extremely common and
almost assumed to be on every

01904947-78e5-4293-a744-6ec4039ccca0-1
00:01:38.047 --> 00:01:39.800
microcontroller or processor.

ddaec3ba-ada7-4b6b-a24e-5b59f929b908-0
00:01:40.680 --> 00:01:44.381
In general, GPIOs do not provide
significant current to output

ddaec3ba-ada7-4b6b-a24e-5b59f929b908-1
00:01:44.381 --> 00:01:47.907
loads and instead operate at
standard logic levels as lower

ddaec3ba-ada7-4b6b-a24e-5b59f929b908-2
00:01:47.907 --> 00:01:49.200
speed control signals.

8186a38e-dfc1-497c-9962-d2c3348c9f81-0
00:01:51.400 --> 00:01:54.717
GPIOs are useful, but their
usefulness quickly diminishes

8186a38e-dfc1-497c-9962-d2c3348c9f81-1
00:01:54.717 --> 00:01:57.920
when faced with great distance
between GPIO interfaces.

921c572e-af3c-485f-8d12-9111aee33727-0
00:01:58.800 --> 00:02:02.117
How useful are GPIOs in an
application where a sensor and

921c572e-af3c-485f-8d12-9111aee33727-1
00:02:02.117 --> 00:02:04.520
its controller are a long
distance apart?

8c709744-906e-4e0f-aa41-559644c7feac-0
00:02:05.400 --> 00:02:08.540
A standard logic level signal
over a wire does not travel

8c709744-906e-4e0f-aa41-559644c7feac-1
00:02:08.540 --> 00:02:12.115
extremely far and it will slowly
degrade due to the losses in the

8c709744-906e-4e0f-aa41-559644c7feac-2
00:02:12.115 --> 00:02:12.440
cable.

a540cbe1-1c05-4c30-8468-b409a6b86c8a-0
00:02:14.280 --> 00:02:17.753
However, with GMSL in the
system, there are already long

a540cbe1-1c05-4c30-8468-b409a6b86c8a-1
00:02:17.753 --> 00:02:21.287
video and data paths that go
back and forth between these

a540cbe1-1c05-4c30-8468-b409a6b86c8a-2
00:02:21.287 --> 00:02:22.080
applications.

2fe702e9-2217-4b6c-bfba-2d3b7f701e67-0
00:02:23.000 --> 00:02:25.920
So is there a way to utilize the
GMSL link?

787961db-b578-476f-b9e2-13aec9199bae-0
00:02:26.720 --> 00:02:30.583
This is where GMSL comes in to
allow long distance GPIO state

787961db-b578-476f-b9e2-13aec9199bae-1
00:02:30.583 --> 00:02:33.200
transmission through its
packetized link.

e3314e44-1c0b-4669-a47e-eecdf9aadbf0-0
00:02:34.000 --> 00:02:37.328
Since the GMSL link is a
packetized one, it allows for

e3314e44-1c0b-4669-a47e-eecdf9aadbf0-1
00:02:37.328 --> 00:02:38.600
diverse applications.

5e733a31-f664-4677-8616-bdd5a224b02e-0
00:02:39.160 --> 00:02:42.593
These packets allow GPIO state
transmission at the same time as

5e733a31-f664-4677-8616-bdd5a224b02e-1
00:02:42.593 --> 00:02:44.600
video and other data within the
link.

c6debeeb-fe79-406c-b2d9-a5b49e2af881-0
00:02:45.280 --> 00:02:48.815
GMSL SerDes can transmit GPIO
states that are received on the

c6debeeb-fe79-406c-b2d9-a5b49e2af881-1
00:02:48.815 --> 00:02:50.640
pins from one side to the other.

ec64685b-5246-4b01-9d89-54593e32049f-0
00:02:52.920 --> 00:02:57.189
The GMSL SerDes is also capable
of toggling the GPIO statement

ec64685b-5246-4b01-9d89-54593e32049f-1
00:02:57.189 --> 00:02:58.680
program via registers.

2dde1d76-f2a1-4e71-b58a-4ae4ac24272f-0
00:02:59.160 --> 00:03:02.938
A microcontroller can send an
I2C command over the GMSL link

2dde1d76-f2a1-4e71-b58a-4ae4ac24272f-1
00:03:02.938 --> 00:03:06.480
to remotely control the GPIO on
the other end of the link.

1bb1e883-dd1b-45f9-a34b-2f7c319dad24-0
00:03:08.440 --> 00:03:10.600
First let us look inside the
devices.

a69a323f-8596-42f4-96ff-4a55a5fedc63-0
00:03:11.320 --> 00:03:15.692
The GPIO feature exists on all
GMSL devices and you can access

a69a323f-8596-42f4-96ff-4a55a5fedc63-1
00:03:15.692 --> 00:03:19.440
this feature through the multi
function pins or MFP's.

b76d02f8-0a8a-4773-80e0-75c06f8499ec-0
00:03:21.800 --> 00:03:24.905
The main consideration is to
determine the direction of the

b76d02f8-0a8a-4773-80e0-75c06f8499ec-1
00:03:24.905 --> 00:03:26.200
GPIO signal transmission.

6d926035-6d34-4ad6-8112-eaee28290331-0
00:03:26.920 --> 00:03:31.282
Every GPIO can be configured as
an input, output or input slash

6d926035-6d34-4ad6-8112-eaee28290331-1
00:03:31.282 --> 00:03:31.760
output.

ffdd7579-0e1c-4ea7-b4cb-5fc19594418e-0
00:03:32.040 --> 00:03:35.030
However the GPIO cannot be
configured to be input and

ffdd7579-0e1c-4ea7-b4cb-5fc19594418e-1
00:03:35.030 --> 00:03:36.360
output at the same time.

a4992041-37bb-49e0-95a6-fdbfdf297e80-0
00:03:37.280 --> 00:03:40.941
The GPIO signal direction must
be determined to configure the

a4992041-37bb-49e0-95a6-fdbfdf297e80-1
00:03:40.941 --> 00:03:44.426
GPIO pins as an INPUT on the
Serializer, an output on the

a4992041-37bb-49e0-95a6-fdbfdf297e80-2
00:03:44.426 --> 00:03:46.080
Deserializer, or vice versa.

f4359d37-3fb0-4fdc-9705-936ae3dfa72c-0
00:03:48.560 --> 00:03:52.146
At this point it is good to
clarify the transmit TX or

f4359d37-3fb0-4fdc-9705-936ae3dfa72c-1
00:03:52.146 --> 00:03:56.060
receive RX nomenclature that
will be used with the GPI that

f4359d37-3fb0-4fdc-9705-936ae3dfa72c-2
00:03:56.060 --> 00:03:57.560
opens at configuration.

ecf97c43-2d51-482b-bd28-5895b096efed-0
00:03:59.400 --> 00:04:03.357
The GPIO pin enabled as TX will
transmit its received logic

ecf97c43-2d51-482b-bd28-5895b096efed-1
00:04:03.357 --> 00:04:05.600
input pin state to the GMSL
link.

5abd026f-01d7-4fb8-bd8d-063581056c14-0
00:04:07.320 --> 00:04:11.254
Conversely, the GPIO pin enabled
as RX will receive the remote

5abd026f-01d7-4fb8-bd8d-063581056c14-1
00:04:11.254 --> 00:04:15.125
logic state from the GMSL link
and transmit that state out to

5abd026f-01d7-4fb8-bd8d-063581056c14-2
00:04:15.125 --> 00:04:16.000
its local pin.

807db253-534e-4bd3-b48d-f254f1b8d027-0
00:04:16.880 --> 00:04:21.227
Remember that the transmit TX
and receive RX is in reference

807db253-534e-4bd3-b48d-f254f1b8d027-1
00:04:21.227 --> 00:04:23.080
to the internal GMSL link.

de3d1bcb-276b-407b-b999-d9bf6d450c56-0
00:04:25.600 --> 00:04:29.549
Aside from the direction of the
GPIO signal, there are a

de3d1bcb-276b-407b-b999-d9bf6d450c56-1
00:04:29.549 --> 00:04:33.567
handful of settings used to set
up the GPIOs based on the

de3d1bcb-276b-407b-b999-d9bf6d450c56-2
00:04:33.567 --> 00:04:37.449
required need, such as the
transmit and receive ID, pull

de3d1bcb-276b-407b-b999-d9bf6d450c56-3
00:04:37.449 --> 00:04:41.399
down, pull up configuration,
jitter reduction, and status

de3d1bcb-276b-407b-b999-d9bf6d450c56-4
00:04:41.399 --> 00:04:42.080
reporting.

993f7683-cd84-4b38-83d2-223dc42033d7-0
00:04:42.960 --> 00:04:45.600
We'll review the operation of
each of these features next.

380d6277-5828-4b81-b3ea-5927bc2cc967-0
00:04:47.760 --> 00:04:52.013
The GPIO capability is also very
flexible within the GMSL

380d6277-5828-4b81-b3ea-5927bc2cc967-1
00:04:52.013 --> 00:04:52.600
devices.

b9d3697d-e888-4a63-8a90-874aa6a9ce49-0
00:04:53.440 --> 00:04:57.861
Each GPIO on one side of the
GMSL link can be mapped to any

b9d3697d-e888-4a63-8a90-874aa6a9ce49-1
00:04:57.861 --> 00:05:02.504
GPIO on the remote side using a
5 bit transmit receive ID that

b9d3697d-e888-4a63-8a90-874aa6a9ce49-2
00:05:02.504 --> 00:05:07.073
is configurable for up to 32
unique GPIO mappings to map GPIO

b9d3697d-e888-4a63-8a90-874aa6a9ce49-3
00:05:07.073 --> 00:05:09.800
pins together through the GMSL
link.

ea865a2c-1096-4cc7-92e9-793f1a37aff2-0
00:05:10.120 --> 00:05:14.125
The transmitting GPIO needs to
have the same transmit ID as the

ea865a2c-1096-4cc7-92e9-793f1a37aff2-1
00:05:14.125 --> 00:05:17.880
receive ID that the receiving
GPIO has been configured for.

ecc2d078-1b88-4204-918e-2fbbfc026075-0
00:05:20.000 --> 00:05:24.588
The transmit and receive IDs are
by default matched up to their

ecc2d078-1b88-4204-918e-2fbbfc026075-1
00:05:24.588 --> 00:05:25.520
GPIO numbers.

c2e1cf00-ee1e-4e48-a4b4-d6b6512954b0-0
00:05:26.280 --> 00:05:30.746
So GPIO 0 will have a receive
and transmit ID of hex 0 on both

c2e1cf00-ee1e-4e48-a4b4-d6b6512954b0-1
00:05:30.746 --> 00:05:33.440
devices and they match up by
default.

532c8fae-f8f1-43ee-a110-f31f4809b063-0
00:05:34.360 --> 00:05:38.520
If the IDs do not match the GPIO
will not propagate through.

00b29032-3533-4e82-922e-738da9d5982c-0
00:05:42.040 --> 00:05:45.698
The pins configured as GPIO pins
on the GMSL device also have

00b29032-3533-4e82-922e-738da9d5982c-1
00:05:45.698 --> 00:05:49.600
configurable and optional pull
up and pull down resistors.

0d17e9c3-e4ab-4a2a-9324-c80723c8acca-0
00:05:50.440 --> 00:05:53.882
The output driver type is also
selectable as open drain or push

0d17e9c3-e4ab-4a2a-9324-c80723c8acca-1
00:05:53.882 --> 00:05:56.680
pull circuits and their edge
rates can be adjusted.

04b3a8e9-5e31-4fdb-9d28-bc05a1565bdd-0
00:05:57.560 --> 00:06:00.831
It is recommended to use lower
value external pull up and pull

04b3a8e9-5e31-4fdb-9d28-bc05a1565bdd-1
00:06:00.831 --> 00:06:03.480
down resistors for stronger pull
up and pull down.

99a1caf3-0d37-4642-879e-86b6efba1297-0
00:06:05.520 --> 00:06:09.005
In certain applications jitter
on the GPI of a signal could be

99a1caf3-0d37-4642-879e-86b6efba1297-1
00:06:09.005 --> 00:06:11.440
a concern for stricter timing
requirements.

430ffd37-3822-4e75-b12d-069e0230957e-0
00:06:12.440 --> 00:06:16.094
GMSL devices offer a delayed
compensation mode which helps

430ffd37-3822-4e75-b12d-069e0230957e-1
00:06:16.094 --> 00:06:19.314
minimize jitter by adding a
fixed delay to the GPIO

430ffd37-3822-4e75-b12d-069e0230957e-2
00:06:19.314 --> 00:06:20.120
transmission.

3ab48988-ae34-4883-a917-5f3aa51d577e-0
00:06:21.040 --> 00:06:24.229
The delay is programmable in the
order of a few microseconds with

3ab48988-ae34-4883-a917-5f3aa51d577e-1
00:06:24.229 --> 00:06:27.080
the benefit of significant
jitter reduction on the signal.

39aa898b-08b9-4b23-a971-b2936701af03-0
00:06:29.520 --> 00:06:35.228
GMSL devices can also report the
GPIO pin logic state by pulling

39aa898b-08b9-4b23-a971-b2936701af03-1
00:06:35.228 --> 00:06:37.160
the GPIO in bit first.

2b9cdbf8-8384-4b85-a88f-393d7d9d1ddd-0
00:06:37.160 --> 00:06:40.140
The microprocessor sends a read
command and waits for the

2b9cdbf8-8384-4b85-a88f-393d7d9d1ddd-1
00:06:40.140 --> 00:06:43.275
returning packet as the command
travels to the remote SerDes

2b9cdbf8-8384-4b85-a88f-393d7d9d1ddd-2
00:06:43.275 --> 00:06:44.920
device and returns to logic low.

cd838f34-0703-439e-8ac7-fd998872016a-0
00:06:45.680 --> 00:06:49.742
When the input changes and the
micro checks the state again, it

cd838f34-0703-439e-8ac7-fd998872016a-1
00:06:49.742 --> 00:06:51.520
is detected as a logic high.

fcc3a6bd-4842-42a3-83c3-ba080be56dd1-0
00:06:56.440 --> 00:06:59.944
The GPIOs pins can also be
manually controlled via writing

fcc3a6bd-4842-42a3-83c3-ba080be56dd1-1
00:06:59.944 --> 00:07:03.389
to the device registers to pull
at logic high or low or to

fcc3a6bd-4842-42a3-83c3-ba080be56dd1-2
00:07:03.389 --> 00:07:05.200
report back the received state.

5604576d-78e9-4143-a44d-aaf738efcaed-0
00:07:06.000 --> 00:07:09.472
This can be helpful when GPIOs
on the peripheral devices are

5604576d-78e9-4143-a44d-aaf738efcaed-1
00:07:09.472 --> 00:07:09.920
limited.

5b6a3378-6e36-4eea-aed4-d9fdd5639910-0
00:07:10.360 --> 00:07:12.400
Let's summarize what we've
covered in this course.

874fa8ee-4d5f-491c-b9e0-dde44d7fee70-0
00:07:13.160 --> 00:07:15.000
What is the purpose of GPIOs?

76b0fc60-24eb-48de-9915-dbd22739736a-0
00:07:15.880 --> 00:07:19.277
GPIOs are simple pins that allow
receiving a signal input or

76b0fc60-24eb-48de-9915-dbd22739736a-1
00:07:19.277 --> 00:07:21.120
transmitting a signal output.

cfe562e9-a918-43db-bce4-1366411e81cc-0
00:07:23.160 --> 00:07:26.680
What are the system benefits of
GPIOs in a GMSL system?

5c99077f-2e6c-4502-9a4b-d4aa0d1d3754-0
00:07:27.680 --> 00:07:31.526
GPIOs can be used for a variety
of low level commands like

5c99077f-2e6c-4502-9a4b-d4aa0d1d3754-1
00:07:31.526 --> 00:07:34.200
reset, enable synchronization,
etcetera.

4d15bc41-d2dc-4359-836e-e903bf94f450-0
00:07:36.520 --> 00:07:39.670
How do you explain the
terminology of GPIO in the

4d15bc41-d2dc-4359-836e-e903bf94f450-1
00:07:39.670 --> 00:07:41.120
context of a GMSL link?

d7ae295d-201e-4da0-909e-0627f62d062b-0
00:07:42.040 --> 00:07:45.103
GPIO directions on the GMSL link
need to be thought of in terms

d7ae295d-201e-4da0-909e-0627f62d062b-1
00:07:45.103 --> 00:07:48.320
of the direction that the GPI of
a signal is travelling.

d1a789af-8e1f-409a-971b-543ddbcb9ac1-0
00:07:49.080 --> 00:07:53.000
For example, if an SoC wants to
communicate with an imager, the

d1a789af-8e1f-409a-971b-543ddbcb9ac1-1
00:07:53.000 --> 00:07:55.880
SoC would output a signal to the
Deserializer.

9eff2f3c-c9b5-42f1-8b38-fab99810c26f-0
00:07:56.800 --> 00:07:59.894
The Deserializer would then
transmit the signal across the

9eff2f3c-c9b5-42f1-8b38-fab99810c26f-1
00:07:59.894 --> 00:08:02.360
link for the Serializer to
receive the signal.

9d96a295-44c3-4d83-b9bf-f6f49245f712-0
00:08:03.240 --> 00:08:05.760
The Serializer would then output
the received signal.

ef505b4f-39ed-424b-865b-81877a5f6f55-0
00:08:07.720 --> 00:08:11.867
How do you explain the methods
of interfacing with the GPIOs

ef505b4f-39ed-424b-865b-81877a5f6f55-1
00:08:11.867 --> 00:08:16.693
GPIOs can be received and
transmitted as low level signals

ef505b4f-39ed-424b-865b-81877a5f6f55-2
00:08:16.693 --> 00:08:21.520
going into and out of the GMSL
link using I2C communication.

4aa8c56a-fc96-45a5-87c9-a242d230f568-0
00:08:21.960 --> 00:08:25.982
GPIO states can be read from a
register or GPIO states can be

4aa8c56a-fc96-45a5-87c9-a242d230f568-1
00:08:25.982 --> 00:08:27.280
set from a register.

61e9efa5-fb15-496c-8535-583dd27ebf94-0
00:08:29.560 --> 00:08:32.360
What are the options for GPIO
configurations?

7c96e4ce-3d36-4e63-bc4f-23bd409ede56-0
00:08:33.280 --> 00:08:36.696
GPIOs can be configured with
transmit and receive IDs for

7c96e4ce-3d36-4e63-bc4f-23bd409ede56-1
00:08:36.696 --> 00:08:37.160
mapping.

add6d8a7-b344-4d29-b390-5a29e6d405f3-0
00:08:37.520 --> 00:08:42.307
Pull up and pull down resistors
can be enabled and jitter can be

add6d8a7-b344-4d29-b390-5a29e6d405f3-1
00:08:42.307 --> 00:08:46.579
compensated for sensitive
applications with the GMSL link

add6d8a7-b344-4d29-b390-5a29e6d405f3-2
00:08:46.579 --> 00:08:48.200
already in the system.

17758c76-5940-4ec7-b9c2-906db2b97037-0
00:08:48.680 --> 00:08:52.089
GPIOs provide a simple but
efficient method of low level

17758c76-5940-4ec7-b9c2-906db2b97037-1
00:08:52.089 --> 00:08:55.440
signalling over long distances
for any general purpose.

