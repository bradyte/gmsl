WEBVTT

889b0710-5bc3-4e52-a176-112690a548be-0
00:00:08.080 --> 00:00:12.499
Many of today's applications which
utilize GMSL have more camera streams

889b0710-5bc3-4e52-a176-112690a548be-1
00:00:12.499 --> 00:00:14.800
than there are video processing ports.

46f3c09c-0dfe-45e6-9a9a-64e49be08d26-0
00:00:15.120 --> 00:00:19.177
The objective of this course is to
give the listener an understanding of

46f3c09c-0dfe-45e6-9a9a-64e49be08d26-1
00:00:19.177 --> 00:00:23.024
the internal architecture of the MIPI
transmitter and receiver blocks in the

46f3c09c-0dfe-45e6-9a9a-64e49be08d26-2
00:00:23.024 --> 00:00:23.920
GMSL CSI Certies.

40bb2369-4b77-4739-acca-f0f2fc15ed1b-0
00:00:23.920 --> 00:00:28.880
In this episode the following questions
will be answered.

5a86c17d-3592-453d-bfe9-388050d584ff-0
00:00:29.400 --> 00:00:35.542
My sensor uses A1 by 2D PHY interface,
but the GMSL2 parts lists A1 by 4D PHY

5a86c17d-3592-453d-bfe9-388050d584ff-1
00:00:35.542 --> 00:00:36.320
interface.

ce684fc8-f57c-4e8b-9eca-d3f062c09e29-0
00:00:36.800 --> 00:00:37.680
Will it still work?

b01ef5ae-2f6e-4a1e-8b84-49bb374f0c6c-0
00:00:38.160 --> 00:00:43.734
How can the MAX96724 have 6 mepi ports
even though it only can be configured to

b01ef5ae-2f6e-4a1e-8b84-49bb374f0c6c-1
00:00:43.734 --> 00:00:47.520
output from at most 4 separate ports at a
single time?

4dc3f3b3-05f4-4ecd-b74e-c88a278bc118-0
00:00:47.880 --> 00:00:53.029
What is the reason for designating
secondary versus primary PHY's in a 1 by

4dc3f3b3-05f4-4ecd-b74e-c88a278bc118-1
00:00:53.029 --> 00:00:54.520
4 MIPI port interface?

b7c6266c-40aa-4115-bede-c038c5a32d1b-0
00:00:55.920 --> 00:00:59.747
In this episode, we will discuss how the
GMSL Serializer receives and acts upon

b7c6266c-40aa-4115-bede-c038c5a32d1b-1
00:00:59.747 --> 00:01:05.118
incoming CSI data and how in the case of
a Deserializer, the device transmits

b7c6266c-40aa-4115-bede-c038c5a32d1b-2
00:01:05.118 --> 00:01:07.200
that data.

bbab8457-5733-49f9-8e75-9d5c028cb537-0
00:01:07.800 --> 00:01:12.501
We will do this by diving into the CSI to
transmit and receive blocks of the GMSL

bbab8457-5733-49f9-8e75-9d5c028cb537-1
00:01:12.501 --> 00:01:12.960
devices.

052d4c40-b5df-4e43-a0b2-9dd72213e1a9-0
00:01:13.600 --> 00:01:18.303
Let's briefly recall the purpose of the
GMSL SerDes by examining a common use

052d4c40-b5df-4e43-a0b2-9dd72213e1a9-1
00:01:18.303 --> 00:01:19.680
case like the one shown here.

5a39fb09-f498-4a22-99b8-8b4d0306e303-0
00:01:22.520 --> 00:01:25.040
In the case of CSI Serializer devices.

7a428ac3-295c-41d9-bfc3-1f3166548260-0
00:01:25.440 --> 00:01:32.752
CSI-2 data is converted to GMSL packets
before it is sent to a Deserializer,

7a428ac3-295c-41d9-bfc3-1f3166548260-1
00:01:32.752 --> 00:01:33.400
GMSL2.

495a4549-ff3a-42f8-82f2-a047de350df6-0
00:01:33.400 --> 00:01:40.622
CSI deserializers receive that GMSL
protocol data and output that data via

495a4549-ff3a-42f8-82f2-a047de350df6-1
00:01:40.622 --> 00:01:41.200
CSI-2.

a69a4664-1bb0-46bc-a70e-9d297b67a01a-0
00:01:43.200 --> 00:01:46.812
Now that we understand the data path,
let's open the data sheet of the

a69a4664-1bb0-46bc-a70e-9d297b67a01a-1
00:01:46.812 --> 00:01:49.560
Serializer and flip to the page of the
block diagram.

730afedf-0ded-4ce5-9b4b-09cca0760bf9-0
00:01:52.560 --> 00:01:56.520
In this case, I will be speaking to
the MAX96717.

5c09983b-c32d-4298-ab2b-60f346b09f3e-0
00:01:56.520 --> 00:01:59.927
Specifically, the Serializer takes
video data in, sends that data

5c09983b-c32d-4298-ab2b-60f346b09f3e-1
00:01:59.927 --> 00:02:04.221
through a series of internal
circuitry blocks, and outputs a

5c09983b-c32d-4298-ab2b-60f346b09f3e-2
00:02:04.221 --> 00:02:06.880
serialized GMSL2 signal.

9fc1fcf4-9225-42a9-bda9-7735ca45b707-0
00:02:08.520 --> 00:02:12.560
This course focuses on the CSI-2
interface block shown here.

93c59f24-a855-40d3-8544-2c66bf4eed2b-0
00:02:13.320 --> 00:02:18.070
The purpose of this CSI-2 receiver is to
take the incoming video data and turn it

93c59f24-a855-40d3-8544-2c66bf4eed2b-1
00:02:18.070 --> 00:02:22.762
into an internal parallel video format
that the digital blocks of the Serializer

93c59f24-a855-40d3-8544-2c66bf4eed2b-2
00:02:22.762 --> 00:02:23.400
can act on.

0bcdafd9-145d-43fc-9d1e-5d130b4e30d7-0
00:02:26.960 --> 00:02:31.000
In the case of the CSI 2D Serializer,
the opposite is true.

9edd69c5-6903-432c-b56a-c1c28c4cec2e-0
00:02:31.480 --> 00:02:36.641
The Deserializer takes the incoming
parallel data sent from its own internal

9edd69c5-6903-432c-b56a-c1c28c4cec2e-1
00:02:36.641 --> 00:02:41.200
circuitry and outputs the data as CSI-2
via MIPI transmitter block.

932e3071-5390-4414-bdcc-3e263556a94c-0
00:02:41.880 --> 00:02:46.410
If we were to zoom in and expand on that
CSI-2 interface block of a Serializer,

932e3071-5390-4414-bdcc-3e263556a94c-1
00:02:46.410 --> 00:02:48.280
we would see something like this.

79839054-baf8-4da3-ad99-dd73dad552b0-0
00:02:49.000 --> 00:02:53.860
We can break the CSI-2 receiver into
three main logic blocks, the MIPI PHY,

79839054-baf8-4da3-ad99-dd73dad552b0-1
00:02:53.860 --> 00:02:58.981
the MIPI controller, and the MIPI port,
which is comprised of one or more MIPI

79839054-baf8-4da3-ad99-dd73dad552b0-2
00:02:58.981 --> 00:03:01.120
Fi's and a lane management block.

d14ecc82-0fbd-41a1-aa34-be9ff33123b0-0
00:03:01.760 --> 00:03:04.600
This course is going to dig more into
each of these topics.

409ef952-fdc3-4f30-a8a4-20b5d861fcc3-0
00:03:04.960 --> 00:03:06.320
Let's begin with the five block.

7f7ce711-c8dc-462a-8420-33ee5ca35b97-0
00:03:06.680 --> 00:03:10.318
The five block is the lowest level
building block of a MIPI receiver, which

7f7ce711-c8dc-462a-8420-33ee5ca35b97-1
00:03:10.318 --> 00:03:14.580
happens to also be the lowest level
building block of a MIPI transmitter as

7f7ce711-c8dc-462a-8420-33ee5ca35b97-2
00:03:14.580 --> 00:03:14.840
well.

c26502e3-a663-4830-8599-8cbba03cbcd4-0
00:03:15.400 --> 00:03:19.327
The MIPI PHY is comprised of
two differential data lanes and

c26502e3-a663-4830-8599-8cbba03cbcd4-1
00:03:19.327 --> 00:03:20.800
one differential clock lane.

54bcfa97-7de4-4c5a-89d8-ec8e7eb77e1a-0
00:03:22.440 --> 00:03:24.960
This is the case when we're talking about
D PHY.

64eb2d0f-846d-4010-b39b-3c06fe7a3319-0
00:03:26.320 --> 00:03:30.722
However, in the case of C PHY, instead
of two data lanes and one clock lane,

64eb2d0f-846d-4010-b39b-3c06fe7a3319-1
00:03:30.722 --> 00:03:33.574
there are only two data lanes which are
operated as trios and have the clock

64eb2d0f-846d-4010-b39b-3c06fe7a3319-2
00:03:33.574 --> 00:03:37.480
embedded within the data.

23a5e703-6e3e-4fe1-9768-6875a886d7e9-0
00:03:38.120 --> 00:03:41.075
Ultimately, the number of inputs to
the PHY is the same, only the

23a5e703-6e3e-4fe1-9768-6875a886d7e9-1
00:03:41.075 --> 00:03:43.740
functionality of the inputs in
these two separate modes are

23a5e703-6e3e-4fe1-9768-6875a886d7e9-2
00:03:43.740 --> 00:03:46.000
different.

cdca9b0e-a59c-4f59-b08f-2e05c5aa7557-0
00:03:46.760 --> 00:03:50.253
The purpose of the MIPI PHY,
regardless of D PHY or C PHY, is to

cdca9b0e-a59c-4f59-b08f-2e05c5aa7557-1
00:03:50.253 --> 00:03:54.042
be the physical layer interface
between two MIPI devices, a

cdca9b0e-a59c-4f59-b08f-2e05c5aa7557-2
00:03:54.042 --> 00:03:55.760
transmitter and a receiver.

be798df5-c2fa-4ae6-8e53-e5653e06df6c-0
00:03:56.360 --> 00:04:00.252
Recall from previous lessons that MIPI
signals will transition between high

be798df5-c2fa-4ae6-8e53-e5653e06df6c-1
00:04:00.252 --> 00:04:01.840
impedance and high speed modes.

b6f3505f-65af-407f-b4cb-118927fe958f-0
00:04:02.320 --> 00:04:06.412
It is the job of the MIPI PHY blocks to
in the case of the transmitter, enact

b6f3505f-65af-407f-b4cb-118927fe958f-1
00:04:06.412 --> 00:04:10.903
those changes of impedance and in the
case of the receiver to expect and vary

b6f3505f-65af-407f-b4cb-118927fe958f-2
00:04:10.903 --> 00:04:14.200
its own internal impedance when those
changes occur.

6069c243-eabf-46e0-93dd-c7c71f90f072-0
00:04:15.160 --> 00:04:19.622
More specifically, as discussed in the
course GMSL 220B, the PHY's will

6069c243-eabf-46e0-93dd-c7c71f90f072-1
00:04:19.622 --> 00:04:25.338
transition between high impedance
termination and 100 ohm differential or

6069c243-eabf-46e0-93dd-c7c71f90f072-2
00:04:25.338 --> 00:04:29.880
in the case of C PHY 50 ohm single
ended.

69bb3d40-9099-4246-8d63-51aa7008052a-0
00:04:33.000 --> 00:04:38.313
A couple of additional facts that will
assist you when using the GMSL SERT's is

69bb3d40-9099-4246-8d63-51aa7008052a-1
00:04:38.313 --> 00:04:43.760
that in the documentation for the SERT's
the MIP PHY's are termed 01/2 and three.

47f92083-8392-4aab-83f7-2c1d30039842-0
00:04:44.680 --> 00:04:48.421
So when you're searching for registers or
information you always search for five

47f92083-8392-4aab-83f7-2c1d30039842-1
00:04:48.421 --> 00:04:49.160
one for example.

a1788970-2799-4058-9a2a-0c4f381c36eb-0
00:04:49.640 --> 00:04:52.093
Finally, depending on the SERTIS part
number, the device can contain either

a1788970-2799-4058-9a2a-0c4f381c36eb-1
00:04:52.093 --> 00:04:54.600
2 or 4-5 blocks.

646c45db-56e9-49d0-ba7c-baed6c42a84c-0
00:04:55.080 --> 00:05:03.040
For example, the MAX96717 contains 2,
five blocks and the MAX96724 contains 4.

911a90ea-fc2a-4d4e-88d1-b34ef07e52ae-0
00:05:03.600 --> 00:05:07.600
Now that we have a working knowledge of
the MIP 5, let's move on to the MIP port.

8724f162-9b0c-49f8-9355-d0c329776c5a-0
00:05:07.600 --> 00:05:12.073
The MIP port is the video interface
between a MIPI transmitter and MIP

8724f162-9b0c-49f8-9355-d0c329776c5a-1
00:05:12.073 --> 00:05:12.640
receiver.

09a90769-1562-43b7-a83f-ea252c47721f-0
00:05:13.240 --> 00:05:16.058
It is comprised of either one or
two mid B fives, the block we

09a90769-1562-43b7-a83f-ea252c47721f-1
00:05:16.058 --> 00:05:20.116
were just speaking about, and
some additional lane mapping

09a90769-1562-43b7-a83f-ea252c47721f-2
00:05:20.116 --> 00:05:20.680
circuitry.

07f887cb-444f-4e19-8508-d23c769f26bf-0
00:05:21.320 --> 00:05:24.840
From that information you can glean that
in the case of D5, the port contains a

07f887cb-444f-4e19-8508-d23c769f26bf-1
00:05:24.840 --> 00:05:29.240
single clock lane and between one and
four data lanes.

ac1d8436-1d28-4e1d-b7d8-91b0e91a8f4b-0
00:05:29.800 --> 00:05:33.855
This is true for C5 as well, except
that there's no clock lane and instead

ac1d8436-1d28-4e1d-b7d8-91b0e91a8f4b-1
00:05:33.855 --> 00:05:36.640
only between one and four data lanes.

5ca5f2a8-c960-404e-9e24-690cdf5ecfd3-0
00:05:37.160 --> 00:05:39.280
The clock signal is embedded within the
data.

fdc60c81-75fd-4ffd-983c-54e21ec7238c-0
00:05:39.960 --> 00:05:41.840
Let's talk about that lane mapping block.

5fe8825d-741a-466f-a019-b54e11030432-0
00:05:42.440 --> 00:05:45.719
This is a little bit of additional
circuitry that is added to complete the

5fe8825d-741a-466f-a019-b54e11030432-1
00:05:45.719 --> 00:05:46.200
MIPI port.

2b53b739-b627-45c2-9cec-47cb8f8d5eb2-0
00:05:46.800 --> 00:05:50.800
The lane mapping and polarity
inversion circuitry, as the name

2b53b739-b627-45c2-9cec-47cb8f8d5eb2-1
00:05:50.800 --> 00:05:54.636
suggests, allows lane swapping and
polarity inversion on the input to the

2b53b739-b627-45c2-9cec-47cb8f8d5eb2-2
00:05:54.636 --> 00:05:57.102
MIPPY receiver or in the case of the
Deserializer, on the output of the

2b53b739-b627-45c2-9cec-47cb8f8d5eb2-3
00:05:57.102 --> 00:05:59.239
MIPI transmitter.

6aca364d-0f91-4aec-89ec-21eed81afb0d-0
00:05:59.840 --> 00:06:03.541
Lanes within the port can be swapped
around and polarity of the differential

6aca364d-0f91-4aec-89ec-21eed81afb0d-1
00:06:03.541 --> 00:06:04.840
data lanes can be inverted.

aa517151-fa43-45a8-b4df-8d871118754b-0
00:06:05.360 --> 00:06:09.440
These capabilities are typically used to
overcome hardware routing limitations.

216b6eb0-d744-40a0-b75b-5c837cb183b7-0
00:06:09.920 --> 00:06:13.412
Now, in the GMSL SER DS, the nippy
transmitter or receiver blocks can be

216b6eb0-d744-40a0-b75b-5c837cb183b7-1
00:06:13.412 --> 00:06:16.800
configured in a number of different port
configurations.

32db6382-1943-4c15-93ad-1c21a7533596-0
00:06:17.320 --> 00:06:20.320
Let's go through each of those different
possible configurations.

c6f4ca3e-a89e-40cc-bb18-3ed9c3974b6a-0
00:06:20.760 --> 00:06:23.670
First, they can be configured
in a 1 by 4 mode, as shown

c6f4ca3e-a89e-40cc-bb18-3ed9c3974b6a-1
00:06:23.670 --> 00:06:24.520
here.

888fe9b4-4580-440f-bfc9-2ca79576bd18-0
00:06:25.080 --> 00:06:28.910
In one by four mode, 1 clock lane and
four data lanes are sent to a single port

888fe9b4-4580-440f-bfc9-2ca79576bd18-1
00:06:28.910 --> 00:06:31.160
spread over 2 fives.

7d872bcd-a42d-41ab-a522-86fae4e6b242-0
00:06:31.800 --> 00:06:36.720
This is the only configuration that the
MAX96717 can be configured.

955a1eca-b268-4dfd-9c0b-051eac74f520-0
00:06:37.240 --> 00:06:44.039
Let's talk about something a little more
interesting like the MAX96724 GMSL2 CSI

955a1eca-b268-4dfd-9c0b-051eac74f520-1
00:06:44.039 --> 00:06:47.480
quad Deserializer including a 1 by 4 mode.

ac625f2c-d348-4241-9d5d-7dd76cc3a60f-0
00:06:47.480 --> 00:06:52.040
The MAX96724 can also be configured in a
2 by 4 mode.

8fdd0f9e-415e-4a5d-bd0e-19626973d9dd-0
00:06:52.600 --> 00:06:57.264
In this mode it is easier to think of it
as 2 by 1 by 4, so 2 independent 1 by 4

8fdd0f9e-415e-4a5d-bd0e-19626973d9dd-1
00:06:57.264 --> 00:06:59.720
ports.

3fa18fef-e304-4f00-9252-851ff6cd64cd-0
00:07:00.280 --> 00:07:04.749
Note that because we are talking about a
Deserializer now and not a Serializer,

3fa18fef-e304-4f00-9252-851ff6cd64cd-1
00:07:04.749 --> 00:07:07.320
the order of the separate blocks is
reversed.

5c270e7e-1844-416a-8ce4-a2bc761cf12d-0
00:07:07.880 --> 00:07:10.760
With that said, let's talk about the
four by two mode.

9484e7f3-60d3-4956-8d32-7445b3ffd589-0
00:07:12.000 --> 00:07:16.852
For this mode, think 41 by two or
four independent one by two

9484e7f3-60d3-4956-8d32-7445b3ffd589-1
00:07:16.852 --> 00:07:18.000
ports.

cadbe3f3-dbc6-49c2-a290-7a8de87ee802-0
00:07:18.560 --> 00:07:23.491
The final mode the MAX96724 can be
configured in is a mix of the prior

cadbe3f3-dbc6-49c2-a290-7a8de87ee802-1
00:07:23.491 --> 00:07:27.669
configurations A1 by four and two by two
mode as shown here, A1 by 4 port and two

cadbe3f3-dbc6-49c2-a290-7a8de87ee802-2
00:07:27.669 --> 00:07:33.080
one by two ports which are all
independent of each other.

d95de699-6d8f-477c-905e-570f3e10d6b5-0
00:07:34.360 --> 00:07:37.806
You may have noticed that some of these
clock lanes leaving some of the ports

d95de699-6d8f-477c-905e-570f3e10d6b5-1
00:07:37.806 --> 00:07:39.000
have the clock crossed out.

c98b156a-6dd4-4ca1-9fa0-a703f5c93c0e-0
00:07:39.640 --> 00:07:40.840
Let's talk about that now.

e5d5bef7-d748-453f-bce1-0f8b75cc9ce3-0
00:07:41.320 --> 00:07:45.756
When a port is comprised of two fives,
one of the clock lanes is always left

e5d5bef7-d748-453f-bce1-0f8b75cc9ce3-1
00:07:45.756 --> 00:07:46.160
unused.

1e008439-1f87-4eea-a9e5-375ce4a72b9d-0
00:07:46.680 --> 00:07:50.905
If we looked at the diagram, we can see
that port A here is a 1 by 4 port where

1e008439-1f87-4eea-a9e5-375ce4a72b9d-1
00:07:50.905 --> 00:07:55.560
2 MIB fives are working together to
collect data across 4 lanes.

13c370a0-80d6-46ef-bc82-d373aedbdfdb-0
00:07:56.200 --> 00:08:00.200
For them to be standard, each port can
only accept 1 clock lane.

954a855f-3b56-431a-b42f-1709753b06dd-0
00:08:00.720 --> 00:08:04.600
Therefore, in this case, one of these
clock lanes is left unused.

2c5ec44d-222d-4cf0-8a19-52637f430c52-0
00:08:05.080 --> 00:08:10.280
That single clock lane in use is going to
go to what is termed the primary or

2c5ec44d-222d-4cf0-8a19-52637f430c52-1
00:08:10.280 --> 00:08:13.880
master PHY in a MAX96724 operating in a 2
by 4 mode.

d6d20a91-5fed-4ba4-9503-b38815a3fc48-0
00:08:14.200 --> 00:08:17.440
Port A has its primary PHY outlined as
PHY 1.

b994a3e1-860f-4a37-8aef-b2cf54d9feeb-0
00:08:18.040 --> 00:08:22.698
PHY 0 in this case is termed secondary,
in which case PHY zero will borrow the

b994a3e1-860f-4a37-8aef-b2cf54d9feeb-1
00:08:22.698 --> 00:08:27.475
clock lane that's replicated from PHY 1
internally and not output any clock from

b994a3e1-860f-4a37-8aef-b2cf54d9feeb-2
00:08:27.475 --> 00:08:28.360
its clock pins.

163f9c2b-714d-4811-88c5-50d1f8c90d48-0
00:08:29.000 --> 00:08:31.321
One other note to mention while we are
here, it is not required that all data

163f9c2b-714d-4811-88c5-50d1f8c90d48-1
00:08:31.321 --> 00:08:34.880
lanes on a Mippi port are utilized.

77eb4c7d-d839-488b-977b-f5129a326486-0
00:08:35.400 --> 00:08:38.489
For instance, A4 lane port like the one
shown above can be operated with any

77eb4c7d-d839-488b-977b-f5129a326486-1
00:08:38.489 --> 00:08:41.800
number of lanes between 1:00 and 4:00.

3182a40c-d971-4bc3-9b23-f4426e736134-0
00:08:42.280 --> 00:08:45.014
Therefore, when interfacing
with another Mippi device,

3182a40c-d971-4bc3-9b23-f4426e736134-1
00:08:45.014 --> 00:08:47.865
it is OK to connect a one
by two port to a 1 by 4

3182a40c-d971-4bc3-9b23-f4426e736134-2
00:08:47.865 --> 00:08:48.680
port.

8ec99689-14a0-4c81-88f4-e0afdcaa4a8f-0
00:08:49.280 --> 00:08:54.150
It is however important that the one by 4
port is configured to operate in two lane

8ec99689-14a0-4c81-88f4-e0afdcaa4a8f-1
00:08:54.150 --> 00:08:54.440
mode.

deb9c25c-25df-4041-8be8-5cdc66a9e0cd-0
00:08:55.840 --> 00:08:58.212
One other note to mention, while we are
here, it is not required that all data

deb9c25c-25df-4041-8be8-5cdc66a9e0cd-1
00:08:58.212 --> 00:09:01.720
lanes on a MIPI port are utilized.

8be7a8b5-6203-4260-ad29-969f138b78de-0
00:09:02.280 --> 00:09:05.360
For instance, A4 lane port like the one
shown here can be operated with any

8be7a8b5-6203-4260-ad29-969f138b78de-1
00:09:05.360 --> 00:09:08.720
number of lanes between 1:00 and 4:00.

2b88a263-c443-43c2-95cd-bfaf5fe19d9c-0
00:09:09.280 --> 00:09:12.520
Therefore, when interfacing with another
MIPI device, it is OK to connect a one by

2b88a263-c443-43c2-95cd-bfaf5fe19d9c-1
00:09:12.520 --> 00:09:15.880
two port to a 1 by 4 port.

98173f61-fb3d-4663-81d3-301b94fa5d90-0
00:09:16.480 --> 00:09:21.576
It is however important that the one by 4
port is configured to operate in two lane

98173f61-fb3d-4663-81d3-301b94fa5d90-1
00:09:21.576 --> 00:09:21.880
mode.

4751481a-93f5-47f8-a165-5d019add0f11-0
00:09:23.680 --> 00:09:27.948
Now that we know the possible port
configurations, we can see that the

4751481a-93f5-47f8-a165-5d019add0f11-1
00:09:27.948 --> 00:09:34.142
MAX96724 actually has six different
ports ABCDE&amp; F despite the fact that

4751481a-93f5-47f8-a165-5d019add0f11-2
00:09:34.142 --> 00:09:38.160
it only has four PHY's.

34da1e49-dcde-41be-a8ba-24d781222b50-0
00:09:38.840 --> 00:09:43.356
This is because ports A&amp; B are the
interface nomenclatures when speaking

34da1e49-dcde-41be-a8ba-24d781222b50-1
00:09:43.356 --> 00:09:48.670
about combining 2MB PHY's into a single
interface or port and then the next 4

34da1e49-dcde-41be-a8ba-24d781222b50-2
00:09:48.670 --> 00:09:53.320
ports are the ports comprised of just a
single PHY, CDE and F.

136d55d0-2be1-4237-b5b6-b45a0c9be794-0
00:09:54.720 --> 00:09:59.312
The final device which is used in the
CSI-2 receiver is what we call the MIPI

136d55d0-2be1-4237-b5b6-b45a0c9be794-1
00:09:59.312 --> 00:09:59.960
controller.

26b74087-c29a-4b0f-b825-a79f2024f228-0
00:10:00.440 --> 00:10:04.243
The MIPI controller is the interfacing
block between the CSI-2 port circuitry

26b74087-c29a-4b0f-b825-a79f2024f228-1
00:10:04.243 --> 00:10:05.560
and the rest of the device.

a52c7bd2-1038-48dc-9048-c250f10b02c8-0
00:10:06.160 --> 00:10:10.499
This block in the case of a CSI-2
receiver takes parallel video data from

a52c7bd2-1038-48dc-9048-c250f10b02c8-1
00:10:10.499 --> 00:10:11.320
the MIPI port.

99d64ce7-244c-47f4-904a-d23f45ac4308-0
00:10:11.920 --> 00:10:15.164
In the case of a transmitter, it
will send parallel data to the MIPI

99d64ce7-244c-47f4-904a-d23f45ac4308-1
00:10:15.164 --> 00:10:15.400
port.

34a638eb-e0e7-4b99-a7b1-6673e4155707-0
00:10:16.000 --> 00:10:20.504
Another function of the controller is
to detect protocol level details of

34a638eb-e0e7-4b99-a7b1-6673e4155707-1
00:10:20.504 --> 00:10:23.045
the incoming video data, for example
data type, virtual channel and other

34a638eb-e0e7-4b99-a7b1-6673e4155707-2
00:10:23.045 --> 00:10:26.280
things like MIPI, CRC errors.

30b7f346-1a89-4832-b913-f5b9de4775fb-0
00:10:26.760 --> 00:10:28.960
Finally, the controller acts as a mux.

859a73ff-ecd8-4dbb-a3ef-56c896c09faf-0
00:10:29.280 --> 00:10:34.468
It directs data to or from the GMSL SerDes
internal FIFOs called video pipes, which

859a73ff-ecd8-4dbb-a3ef-56c896c09faf-1
00:10:34.468 --> 00:10:38.080
you'll learn about in the separate GMSL U
course.

dbcf4c26-7be3-49dd-add7-b5520073b6c5-0
00:10:38.520 --> 00:10:42.840
Which video pipe the controller chooses to
receive its data from can be filtered

dbcf4c26-7be3-49dd-add7-b5520073b6c5-1
00:10:42.840 --> 00:10:45.080
based on virtual channel and or data type.

87114d3b-d0c1-4d36-922e-542774e9b4c8-0
00:10:46.040 --> 00:10:47.160
Now up with fives.

5f7dd97a-7d8c-4491-bbf8-75afe1e437ab-0
00:10:47.160 --> 00:10:51.240
When different ports are used or selected,
different controllers are used.

70040d8a-d39f-4b78-a837-54caf4fa4fab-0
00:10:51.800 --> 00:10:56.642
In the case of a 96724 Deserializer
operating in 2 by 4 mode, port A is using

70040d8a-d39f-4b78-a837-54caf4fa4fab-1
00:10:56.642 --> 00:11:01.720
controller one and port B is using
controller 2.

35bef731-5da1-4492-9158-45aad06daedd-0
00:11:03.240 --> 00:11:06.320
Now with that same device, we're to
operate in four by two mode.

200e909b-6594-4c0f-85b2-656af863347f-0
00:11:06.320 --> 00:11:11.670
Instead, port CDE and F would be
using controller 012 and three

200e909b-6594-4c0f-85b2-656af863347f-1
00:11:11.670 --> 00:11:14.560
respectively.

040c438e-ec6b-4173-9970-985b7b6825b7-0
00:11:16.440 --> 00:11:20.500
One final function of the MIPI
transmitter block in GMSLCSI to

040c438e-ec6b-4173-9970-985b7b6825b7-1
00:11:20.500 --> 00:11:25.655
serializers is the ability to copy data
that is sent to 1 PHY and send it out

040c438e-ec6b-4173-9970-985b7b6825b7-2
00:11:25.655 --> 00:11:26.880
to another PHY as well.

c5eb4f1a-690d-4e8d-89f9-fd48205b52ef-0
00:11:27.360 --> 00:11:28.840
This is called PHY
copy.

cb05df38-8880-4d96-b2dc-af8fd6713475-0
00:11:29.440 --> 00:11:33.548
A user can specify the source PHY,
in other words what data to copy,

cb05df38-8880-4d96-b2dc-af8fd6713475-1
00:11:33.548 --> 00:11:37.476
and the destination PHY, in other
words where that data should be sent

cb05df38-8880-4d96-b2dc-af8fd6713475-2
00:11:37.476 --> 00:11:37.960
to.

9816ffde-8ba4-44eb-adb1-1496480ebc61-0
00:11:38.480 --> 00:11:42.124
For instance, one could take the data
that is normally exiting from PHY 0 and

9816ffde-8ba4-44eb-adb1-1496480ebc61-1
00:11:42.124 --> 00:11:47.160
replicate that data to output from 51
simultaneously.

cb16cf6c-7d5b-4965-86f1-dd14972d9810-0
00:11:47.640 --> 00:11:50.624
When using this feature, there is one
thing that a user should keep in

cb16cf6c-7d5b-4965-86f1-dd14972d9810-1
00:11:50.624 --> 00:11:51.240
mind.

08908190-c438-4166-9c65-80b4161373ae-0
00:11:51.880 --> 00:11:56.373
All the five settings of the source and
destination for transmitters should be

08908190-c438-4166-9c65-80b4161373ae-1
00:11:56.373 --> 00:11:59.160
exactly the same, like clock speed for
instance.

04906988-0978-45ee-9f33-149e35319e4c-0
00:12:00.400 --> 00:12:03.400
Let's answer the questions we introduced
at the beginning of this course.

796b6c86-c352-46a4-922f-118126b0a23c-0
00:12:03.880 --> 00:12:10.422
My sensor uses a one by two D5 interface,
but the GMSL2 parts lists one by four

796b6c86-c352-46a4-922f-118126b0a23c-1
00:12:10.422 --> 00:12:11.240
D-PHY interface.

0a320dc2-bb35-48e8-b52c-70ffeb52beee-0
00:12:11.720 --> 00:12:12.560
Will it still work?

024e9368-7190-4d00-8d63-e31b4a84f93b-0
00:12:13.120 --> 00:12:13.640
Yes.

fb2abd6a-832e-4cc1-b1cf-6034328d6762-0
00:12:13.800 --> 00:12:17.794
The one by 4 nippy 5 will need to be
programmed to operate in a reduced lane

fb2abd6a-832e-4cc1-b1cf-6034328d6762-1
00:12:17.794 --> 00:12:20.440
state where only two of the four lanes
are active.

1ddf1f56-373b-426c-89f4-ab86316ca45c-0
00:12:21.080 --> 00:12:26.952
How can the MAX96724 have 6 nippy ports
even though it can only be configured of

1ddf1f56-373b-426c-89f4-ab86316ca45c-1
00:12:26.952 --> 00:12:32.967
output from at most 4 separate ports at a
single time While operating in the 2 by 4

1ddf1f56-373b-426c-89f4-ab86316ca45c-2
00:12:32.967 --> 00:12:35.760
mode, the two ports are termed A&amp;B.

abeb7bab-53d7-4656-bfd4-5dd6a610c7c1-0
00:12:36.120 --> 00:12:41.120
When operating as one by two ports,
CDE and F are used.

5f05692c-171d-43de-b87e-7b7a86550ccf-0
00:12:41.880 --> 00:12:46.905
What is the reason for designating
secondary versus primary PHY's in a 1 by

5f05692c-171d-43de-b87e-7b7a86550ccf-1
00:12:46.905 --> 00:12:48.360
4 MIPI port interface?

cec88848-d112-4d69-8457-5dd5eeddc25b-0
00:12:48.920 --> 00:12:52.968
In the Deserializer, the secondary PHY
will internally borrow the clock lane

cec88848-d112-4d69-8457-5dd5eeddc25b-1
00:12:52.968 --> 00:12:55.320
from the primary PHY.

b93c94d5-ccd7-4f8b-8f5d-9ee2e7ff33a2-0
00:12:56.000 --> 00:12:59.114
In the Serializer, no clock lane is sent
from the sensor to the secondary PHY

b93c94d5-ccd7-4f8b-8f5d-9ee2e7ff33a2-1
00:12:59.114 --> 00:13:00.360
input.

26828108-13ae-4326-8317-a5b44f5c94f8-0
00:13:01.080 --> 00:13:03.652
And with that, we can conclude our
lesson on the internal MIPI

26828108-13ae-4326-8317-a5b44f5c94f8-1
00:13:03.652 --> 00:13:06.120
architecture of the GMSL SERT's.

1335993d-4a26-4595-afe3-f8f8ed319b04-0
00:13:06.440 --> 00:13:07.240
Thanks for watching.

